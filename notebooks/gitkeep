#Load and preview the dataset
import pandas as pd

df = pd.read_csv('email_deliverability_dataset.csv')
df.head()
df.info()
df.describe()

# Bounce likelihood by domain

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(12, 6))
sns.countplot(data=df, x='domain', hue='bounce_likelihood')
plt.xticks(rotation=45)
plt.title('Bounce Likelihood by Email Domain')
plt.show()

#Correlation Heatmap
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

#Build Baseline Classifier

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

features = ['open_rate', 'click_rate', 'has_spammy_words', 'num_links', 'html_email', 'past_bounce', 'spam_trap_flag']
X = df[features]
y = df['bounce_likelihood']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = RandomForestClassifier()
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

print(classification_report(y_test, y_pred))

#Feature Importance

importances = clf.feature_importances_
feature_names = X.columns

plt.figure(figsize=(10, 5))
sns.barplot(x=importances, y=feature_names)
plt.title('Feature Importance')
plt.show()

